<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fellow.dao.MessageMapper">

    <resultMap id="Message" type="com.fellow.domain.model.Message">
        <result property="id" column="id"/>
        <result property="longAccount" column="long_account"/>
        <result property="shortAccount" column="short_account"/>
        <result property="sendTime" column="send_time"/>
        <result property="messageType" column="message_type"/>
        <result property="message" column="message"/>
        <result property="contentType" column="content_type"/>
        <result property="longDelete" column="long_delete"/>
        <result property="shortDelete" column="short_delete"/>
        <result property="longUnreadNum" column="long_unread_num"/>
        <result property="shortUnreadNum" column="short_unread_num"/>
        <result property="createAccount" column="create_account"/>
        <result property="createName" column="create_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateAccount" column="update_account"/>
        <result property="updateName" column="update_name"/>
        <result property="updateTime" column="update_time"/>
        <result property="sysVersion" column="sys_version"/>
        <result property="isDelete" column="is_delete"/>
        <result property="ts" column="ts"/>
        <result property="unreadNum" column="unreadNum"/>
    </resultMap>

    <resultMap id="MessageCountMap" type="com.fellow.domain.vo.MessageCount">
        <result property="count" column="count"/>
        <result property="unReadNum" column="unReadNum"/>
    </resultMap>
    <sql id="columns">
        id,long_account,short_account,send_time,message_type,message,content_type,long_delete,short_delete,long_unread_num,short_unread_num,create_account,create_name,create_time,update_account,update_name,update_time,sys_version,is_delete,ts
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO message (
        long_account,
        short_account,
        send_time,
        message_type,
        message,
        content_type,
        long_delete,
        short_delete,
        long_unread_num,
        short_unread_num,
        create_account,
        create_name,
        create_time,
        update_account,
        update_name,
        update_time,
        sys_version,
        is_delete

        ) VALUES (
        #{longAccount},
        #{shortAccount},
        #{sendTime},
        #{messageType},
        #{message},
        #{contentType},
        #{longDelete},
        #{shortDelete},
        #{longUnreadNum},
        #{shortUnreadNum},
        #{createAccount},
        #{createName},
        now(),
        #{updateAccount},
        #{updateName},
        #{updateTime},
        1,
        0

        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO message (
        <if test="@Ognl@isNotEmpty(longAccount)">
            long_account,
        </if>
        <if test="@Ognl@isNotEmpty(shortAccount)">
            short_account,
        </if>
        <if test="@Ognl@isNotEmpty(sendTime)">
            send_time,
        </if>
        <if test="@Ognl@isNotEmpty(messageType)">
            message_type,
        </if>
        <if test="@Ognl@isNotEmpty(message)">
            message,
        </if>
        <if test="@Ognl@isNotEmpty(contentType)">
            content_type,
        </if>
        <if test="@Ognl@isNotEmpty(longDelete)">
            long_delete,
        </if>
        <if test="@Ognl@isNotEmpty(shortDelete)">
            short_delete,
        </if>
        <if test="@Ognl@isNotEmpty(longUnreadNum)">
            long_unread_num,
        </if>
        <if test="@Ognl@isNotEmpty(shortUnreadNum)">
            short_unread_num,
        </if>
        <if test="@Ognl@isNotEmpty(createAccount)">
            create_account,
        </if>
        <if test="@Ognl@isNotEmpty(createName)">
            create_name,
        </if>
        create_time,
        <if test="@Ognl@isNotEmpty(updateAccount)">
            update_account,
        </if>
        <if test="@Ognl@isNotEmpty(updateName)">
            update_name,
        </if>
        <if test="@Ognl@isNotEmpty(updateTime)">
            update_time,
        </if>
        sys_version,
        is_delete
        ) VALUES (
        <if test="@Ognl@isNotEmpty(longAccount)">
            #{longAccount},
        </if>
        <if test="@Ognl@isNotEmpty(shortAccount)">
            #{shortAccount},
        </if>
        <if test="@Ognl@isNotEmpty(sendTime)">
            #{sendTime},
        </if>
        <if test="@Ognl@isNotEmpty(messageType)">
            #{messageType},
        </if>
        <if test="@Ognl@isNotEmpty(message)">
            #{message},
        </if>
        <if test="@Ognl@isNotEmpty(contentType)">
            #{contentType},
        </if>
        <if test="@Ognl@isNotEmpty(longDelete)">
            #{longDelete},
        </if>
        <if test="@Ognl@isNotEmpty(shortDelete)">
            #{shortDelete},
        </if>
        <if test="@Ognl@isNotEmpty(longUnreadNum)">
            #{longUnreadNum},
        </if>
        <if test="@Ognl@isNotEmpty(shortUnreadNum)">
            #{shortUnreadNum},
        </if>
        <if test="@Ognl@isNotEmpty(createAccount)">
            #{createAccount},
        </if>
        <if test="@Ognl@isNotEmpty(createName)">
            #{createName},
        </if>
        now(),
        <if test="@Ognl@isNotEmpty(updateAccount)">
            #{updateAccount},
        </if>
        <if test="@Ognl@isNotEmpty(updateName)">
            #{updateName},
        </if>
        <if test="@Ognl@isNotEmpty(updateTime)">
            #{updateTime},
        </if>
        1,
        0
        )
    </insert>

    <update id="update" >
        UPDATE message SET
        <if test="@Ognl@isNotEmpty(longAccount)">
            long_account = #{longAccount},
        </if>
        <if test="@Ognl@isNotEmpty(shortAccount)">
            short_account = #{shortAccount},
        </if>
        <if test="@Ognl@isNotEmpty(sendTime)">
            send_time = #{sendTime},
        </if>
        <if test="@Ognl@isNotEmpty(messageType)">
            message_type = #{messageType},
        </if>
        <if test="@Ognl@isNotEmpty(message)">
            message = #{message},
        </if>
        <if test="@Ognl@isNotEmpty(contentType)">
            content_type = #{contentType},
        </if>
        <if test="@Ognl@isNotEmpty(longDelete)">
            long_delete = #{longDelete},
        </if>
        <if test="@Ognl@isNotEmpty(shortDelete)">
            short_delete = #{shortDelete},
        </if>
        <if test="@Ognl@isNotEmpty(longUnreadNum)">
            long_unread_num = #{longUnreadNum},
        </if>
        <if test="@Ognl@isNotEmpty(shortUnreadNum)">
            short_unread_num = #{shortUnreadNum},
        </if>
        <if test="@Ognl@isNotEmpty(createAccount)">
            create_account = #{createAccount},
        </if>
        <if test="@Ognl@isNotEmpty(createName)">
            create_name = #{createName},
        </if>
        <if test="@Ognl@isNotEmpty(createTime)">
            create_time = #{createTime},
        </if>
        <if test="@Ognl@isNotEmpty(updateAccount)">
            update_account = #{updateAccount},
        </if>
        <if test="@Ognl@isNotEmpty(updateName)">
            update_name = #{updateName},
        </if>
        <if test="@Ognl@isNotEmpty(updateTime)">
            update_time = now(),
        </if>
        <if test="@Ognl@isNotEmpty(sysVersion)">
            sys_version = CASE WHEN sys_version IS NULL THEN 0 ELSE sys_version + 1 END,
        </if>
        <if test="@Ognl@isNotEmpty(isDelete)">
            is_delete = #{isDelete}
        </if>
        WHERE
        id = #{id}
    </update>

    <update id="updateByOptimisticLock" >
        UPDATE message
        SET
        <if test="@Ognl@isNotEmpty(longAccount)">
            long_account = #{longAccount},
        </if>
        <if test="@Ognl@isNotEmpty(shortAccount)">
            short_account = #{shortAccount},
        </if>
        <if test="@Ognl@isNotEmpty(sendTime)">
            send_time = #{sendTime},
        </if>
        <if test="@Ognl@isNotEmpty(messageType)">
            message_type = #{messageType},
        </if>
        <if test="@Ognl@isNotEmpty(message)">
            message = #{message},
        </if>
        <if test="@Ognl@isNotEmpty(contentType)">
            content_type = #{contentType},
        </if>
        <if test="@Ognl@isNotEmpty(longDelete)">
            long_delete = #{longDelete},
        </if>
        <if test="@Ognl@isNotEmpty(shortDelete)">
            short_delete = #{shortDelete},
        </if>
        <if test="@Ognl@isNotEmpty(longUnreadNum)">
            long_unread_num = #{longUnreadNum},
        </if>
        <if test="@Ognl@isNotEmpty(shortUnreadNum)">
            short_unread_num = #{shortUnreadNum},
        </if>
        <if test="@Ognl@isNotEmpty(createAccount)">
            create_account = #{createAccount},
        </if>
        <if test="@Ognl@isNotEmpty(createName)">
            create_name = #{createName},
        </if>
        <if test="@Ognl@isNotEmpty(createTime)">
            create_time = #{createTime},
        </if>
        <if test="@Ognl@isNotEmpty(isDelete)">
            is_delete = #{isDelete},
        </if>
        update_account =#{updateAccount} ,
        update_name = #{updateName} ,
        update_time = now(),
        sys_version = sys_version + 1
        WHERE
        sys_version = #{sysVersion, jdbcType=INTEGER}
        AND id = #{id}
    </update>

    <delete id="delete">
        UPDATE message
        SET is_delete = 1
        <if test="@Ognl@isNotEmpty(updateAccount)">
            update_account = #{updateAccount} ,
        </if>
        <if test="@Ognl@isNotEmpty(updateName)">
            update_name = #{updateName} ,
        </if>
        update_time = now(),
        sys_version = sys_version + 1
        WHERE
        id = #{id}
    </delete>

    <delete id="deletePhysical">
        DELETE
        FROM message
        WHERE
        id = #{id}
    </delete>

    <select id="getByKey" resultMap="Message">
        SELECT <include refid="columns" />
        FROM message
        WHERE
        id = #{id}
    </select>

    <select id="findList" resultMap="Message">
        SELECT <include refid="columns" />
        FROM message
        <include refid="findList_where"/>
        <if test="@Ognl@isNotEmpty(sortColumns)">
            ORDER BY ${sortColumns}
        </if>
    </select>

    <select id="findListCount" resultType="int">
        SELECT count(1)
        FROM message
        <include refid="findList_where"/>
    </select>

    <sql id="findList_where">
        <where>
            <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id}
            </if>
            <if test="@Ognl@isNotEmpty(longAccount)">
                AND long_account = #{longAccount}
            </if>
            <if test="@Ognl@isNotEmpty(shortAccount)">
                AND short_account = #{shortAccount}
            </if>
            <if test="@Ognl@isNotEmpty(sendTimeBegin)">
                AND send_time &gt;= #{sendTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(sendTimeEnd)">
                AND send_time &lt;= #{sendTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(messageType)">
                AND message_type = #{messageType}
            </if>
            <if test="@Ognl@isNotEmpty(message)">
                AND message = #{message}
            </if>
            <if test="@Ognl@isNotEmpty(contentType)">
                AND content_type = #{contentType}
            </if>
            <if test="@Ognl@isNotEmpty(longDelete)">
                AND long_delete = #{longDelete}
            </if>
            <if test="@Ognl@isNotEmpty(shortDelete)">
                AND short_delete = #{shortDelete}
            </if>
            <if test="@Ognl@isNotEmpty(longUnreadNum)">
                AND long_unread_num = #{longUnreadNum}
            </if>
            <if test="@Ognl@isNotEmpty(shortUnreadNum)">
                AND short_unread_num = #{shortUnreadNum}
            </if>
            <if test="@Ognl@isNotEmpty(createAccount)">
                AND create_account = #{createAccount}
            </if>
            <if test="@Ognl@isNotEmpty(createName)">
                AND create_name = #{createName}
            </if>
            <if test="@Ognl@isNotEmpty(createTimeBegin)">
                AND create_time &gt;= #{createTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(createTimeEnd)">
                AND create_time &lt;= #{createTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(updateAccount)">
                AND update_account = #{updateAccount}
            </if>
            <if test="@Ognl@isNotEmpty(updateName)">
                AND update_name = #{updateName}
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeBegin)">
                AND update_time &gt;= #{updateTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeEnd)">
                AND update_time &lt;= #{updateTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(sysVersion)">
                AND sys_version = #{sysVersion}
            </if>
            <choose>
                <when test="@Ognl@isNotEmpty(isDelete)">
                    AND is_delete = #{isDelete}
                </when>
                <otherwise>
                    AND is_delete = 0
                </otherwise>
            </choose>
        </where>
    </sql>

    <select id="selectPersonMessageCount" resultMap="MessageCountMap">
    SELECT
            COUNT(id) AS count,
            SUM(if(long_account = #{longAccount} ,long_unread_num,short_unread_num)) AS unReadNum
        FROM
            message
        WHERE
            is_delete = 0
            AND ((long_account = #{longAccount} AND long_delete = 0) OR (short_account = #{shortAccount} AND short_delete = 0))
    </select>

    <select id="selectPersonMessage" resultMap="Message">
        SELECT
            long_account,
            short_account,
            content_type,
            message_type,
            send_time,
            message,
            IF(long_account = #{longAccount} ,long_unread_num,short_unread_num) AS unReadNum
        FROM
            message
        WHERE
            is_delete = 0
            AND ((long_account = #{longAccount} AND long_delete = 0) OR (short_account = #{shortAccount} AND short_delete = 0))
            <if test="@Ognl@isNotEmpty(sortColumns)">
                ORDER BY ${sortColumns}
            </if>
            LIMIT ${limit}
    </select>

    <update id="longMessageHadRead">
        UPDATE
             message
        SET
            long_unread_num = 0,
            update_account=#{updateAccount},
            update_name=#{updateName},
            update_time=now(),
            sys_version=sys_version + 1
        WHERE
            long_account = #{longAccount}
            AND short_account = #{shortAccount}
            AND is_delete = 0
    </update>

    <update id="shortMessageHadRead">
        UPDATE
            message
        SET
            short_unread_num = 0,
            update_account=#{updateAccount},
            update_name=#{updateName},
            update_time=now(),
            sys_version=sys_version + 1
        WHERE
            long_account = #{longAccount}
            AND short_account = #{shortAccount}
            AND is_delete = 0
    </update>

    <update id="unReadMessageUpdate">
        UPDATE
             message
        SET
            send_time=NOW(),
            long_unread_num = long_unread_num + #{longUnreadNum},
            short_unread_num = short_unread_num + #{shortUnreadNum},
            message=#{message},
            content_type=#{contentType},
            long_delete=#{longDelete},
            short_delete=#{shortDelete},
            update_account=#{updateAccount},
            update_name=#{updateName},
            update_time=now(),
            sys_version=sys_version + 1
        WHERE
             long_account = #{longAccount}
            AND short_account = #{shortAccount}
            AND id = #{id}
            AND is_delete = 0
    </update>

    <select id="messageExist" resultType="java.lang.Long">
        SELECT
            id
        FROM
            message
        WHERE
            is_delete = 0
              AND    long_account = #{longAccount}
            AND short_account = #{shortAccount}
    </select>

    <update id="deleteMessage">
        UPDATE
            message
        SET
        <if test="@Ognl@isNotEmpty(longUnreadNum)">
            long_unread_num = #{longUnreadNum},
        </if>
        <if test="@Ognl@isNotEmpty(shortUnreadNum)">
            short_unread_num = #{shortUnreadNum},
        </if>
        <if test="@Ognl@isNotEmpty(longDelete)">
            long_delete = #{longDelete},
        </if>
        <if test="@Ognl@isNotEmpty(shortDelete)">
            short_delete = #{shortDelete},
        </if>
            update_account=#{updateAccount},
            update_name=#{updateName},
            update_time=now(),
            sys_version=sys_version + 1
        WHERE
            long_account = #{longAccount}
            AND short_account = #{shortAccount}
            AND is_delete = 0
    </update>

</mapper>